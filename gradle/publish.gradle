/*
 * Copyright 2012-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()
ext {
    buildTime = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildDate = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

apply plugin: 'maven-publish'
apply plugin: 'bintray'

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.getProperty("java.vm.version") + ")",
            'Build-Date': project.buildTime,
            'Build-Time': project.buildDate,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Specification-Vendor': 'asciidoctor.org',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'asciidoctor.org'
        )
    }
}

def pomConfig = {
    name project.name
    description 'A Gradle plugin that uses Asciidoctor via JRuby to process AsciiDoc source files within the project'
    url 'http://asciidoctor.org'
    inceptionYear '2013'
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    scm {
        url 'https://github.com/asciidoctor/asciidoctor-gradle-plugin'
    }
    developers {
        developer {
            id 'mojavelinux'
            name 'Dan Allen'
            roles {
                role 'Asciidoctor Founder and Benevolent Dictator'
                role 'Open Source Hero'
            }
        }
        [
            aalmiray: 'Andres Almiray',
            noamt: 'Noam Tenne',
            bmuschko: 'Benjamin Muschko'
        ].each { devId, devName ->
            developer {
                id devId
                name devName
                roles {
                    role 'Developer'
                }
            }
        }
    }
    contributors {
        [
            tombujok: 'Tom Bujok',
            lpeilak: 'Lukasz Pielak',
            dvyazelenko: 'Dmitri Vyazelenko',
            rwinch: 'Rob Winch'
        ].each { devId, devName ->
            contributor {
                id devId
                name devName
                roles {
                    role 'contributor'
                }
            }
        }
    }
}

publishing {
    publications {
        mavenCustom(MavenPublication) {
            from components.java
            artifact sourceJar

            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}

task install(dependsOn: publishToMavenLocal)

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = ''

bintray {
    user = project.bintrayUsername
    key = project.bintrayApiKey
    publications = ['mavenCustom']
    pkg {
        repo = 'asciidoctor'
        userOrg = 'aalmiray'
        name = 'asciidoctor-gradle-plugin'
        desc = 'A Gradle plugin that uses Asciidoctor via JRuby to process AsciiDoc source files within the project'
        licenses = ['Apache-2.0']
        labels = ['gradle', 'plugin', 'asciidoctor']
    }
}
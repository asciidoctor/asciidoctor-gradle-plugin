/*
 * Copyright 2013-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
            'Build-Date': buildDate,
            'Build-Time': buildTime,
            'Build-Revision': versioning.info.commit,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Specification-Vendor': project.name,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': project.name
        )
    }

    metaInf {
        from file('.')
        include 'LICENSE'
    }
}

def pomConfig = {
    name project.name
    description project.project_description
    url project.project_website
    inceptionYear '2013'
    licenses {
        license([:]) {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    scm {
        url project.project_vcs
    }
    developers {
        developer {
            id 'mojavelinux'
            name 'Dan Allen'
            roles {
                role 'Asciidoctor Founder and Benevolent Dictator'
                role 'Open Source Hero'
            }
        }
        [
            aalmiray: 'Andres Almiray',
            noamt   : 'Noam Tenne',
            bmuschko: 'Benjamin Muschko'
        ].each { devId, devName ->
            developer {
                id devId
                name devName
                roles {
                    role 'Developer'
                }
            }
        }
    }
    contributors {
        [
            tombujok   : 'Tom Bujok',
            jlupi      : 'Lukasz Pielak',
            dvyazelenko: 'Dmitri Vyazelenko',
            rwinch     : 'Rob Winch',
            Skyr       : 'Stefan Schlott',
            sclassen   : 'Stephan Classen',
            McPringle  : 'Marcus Fihlon',
            msgilligan : 'Sean Gilligan',
            afolmert   : 'Adam Folmert',
            mrhaki     : 'Hubert Klein Ikkink',
            bobbytank42: 'Robert Panzer',
            oti        : 'Otmar Humbel',
            anschmi    : 'Andreas Schmidt'
        ].each { devId, devName ->
            contributor {
                name devName
                roles {
                    role 'contributor'
                }
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
            }
        }
    }
}

bintray {
    user = bintrayUsername
    key = bintrayKey
    publications = ['mavenJava']
    dryRun = bintrayDryRun.toBoolean()
    pkg {
        userOrg = bintrayOrg
        repo = bintrayRepo
        name = project.name
        desc = project.project_description
        licenses = ['Apache-2.0']
        labels = ['asciidoctor', 'gradle', 'plugin']
        websiteUrl = project.project_website
        issueTrackerUrl = project.project_issues
        vcsUrl = project.project_vcs
        publicDownloadNumbers = true
        version {
            attributes = ['gradle-plugin': 'org.asciidoctor.convert:org.asciidoctor:asciidoctor-gradle-plugin']
        }
    }
}

pluginBundle {
    website = project.project_website
    vcsUrl = project.project_vcs
    description = project.project_description
    tags = ['asciidoctor', 'gradle', 'plugin']

    plugins {
        asciidoctorPlugin {
            id = project_pluginId
            displayName = 'Asciidoctor Gradle Plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
        version = project.version
    }
}

/*
 * Copyright 2012-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    apply from: 'gradle/Bintray.gradle'
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'

configurations {
    deployerJars
}

repositories {
    bintray.jcenter()
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2',
            'org.apache.maven:maven-ant-tasks:2.1.0'
    compile gradleApi()
    compile('org.asciidoctor:asciidoctor-java-integration:0.1.2') {
        exclude group: 'rubygems', module :'haml'
        exclude group: 'rubygems', module :'asciidoctor'
        exclude group: 'rubygems', module :'coderay'
        exclude group: 'rubygems', module :'tilt'
        exclude group: 'rubygems', module :'erubis'
        exclude group: 'rubygems', module :'slim'
    }
    testCompile 'org.spockframework:spock-core:0.6-groovy-1.8'
}

task wrapper(type: Wrapper, description: 'Gradle Wrapper task') {
    gradleVersion = '1.5'
}

def installer = install.repositories.mavenInstaller
def deployer = null

if(!project.hasProperty('bintrayUsername')) ext.bintrayUsername = ''
if(!project.hasProperty('bintrayPassword')) ext.bintrayPassword = ''

uploadArchives {
    repositories {
        deployer = mavenDeployer {
            name = 'bintrayDeployer'
            configuration = configurations.deployerJars
            repository(url: bintrayReleaseUrl) {
                authentication(userName: bintrayUsername, password: bintrayPassword)
            }
        }
    }
}

[installer, deployer].each { repo ->
    configure(repo) {
        pom.project {
            name('asciidoctor-gradle-plugin')
            description('A Gradle plugin that uses Asciidoctor via JRuby to process AsciiDoc source files within the project')
            url('http://asciidoctor.org')
            inceptionYear '2013'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url "https://github.com/asciidoctor/asciidoctor-gradle-plugin"
            }
            developers {
                [
                     aalmiray: 'Andres Almiray',
                     noamt: 'Noam Tenne',
                     bmuschko: 'Benjamin Muschko'
                ].each { devId, devName ->
                    developer {
                        id devId
                        name devName
                        roles {
                            role 'Developer'
                        }
                    }
                }
                [
                    tombujok: 'Tom Bujok',
                    lpeilak: 'Lukasz Pielak',
                    dvyazelenko: 'Dmitri Vyazelenko'
                ].each { devId, devName ->
                    developer {
                        id devId
                        name devName
                        roles {
                            role 'Contributor'
                        }
                    }
                }
            }
        }
    }
}
